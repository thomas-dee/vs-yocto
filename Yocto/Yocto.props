<!--
***********************************************************************************************
Android.Common.props

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildThisFileDirectory)ImportBefore\*.props" Condition="Exists('$(MSBuildThisFileDirectory)ImportBefore')" />
  <Import Project="$(MSBuildThisFileDirectory)Platform.props" />
  <PropertyGroup>
    <!-- By default we use the same bitness as the hosting platform -->
    <PreferredToolArchitecture Condition="'$(PreferredToolArchitecture)' == ''">x64</PreferredToolArchitecture>
    <TargetOSAndVersion>Linux</TargetOSAndVersion>
    <RemoteRootDir Condition="'$(RemoteRootDir)' == ''">$(Registry:HKEY_CURRENT_USER\Software\Microsoft\VisualStudio\15.0\Linux\Linux@RemoteRootDir)</RemoteRootDir>
    <RemoteRootDir Condition="'$(RemoteRootDir)' == ''">~/projects</RemoteRootDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(DisableRegistryUse)' != 'true'">
    <LinuxIncludePath Condition="'$(LinuxIncludePath)' == ''">$(DevEnvDir)VC\Linux\include</LinuxIncludePath>
    <GDBRoot Condition="'$(GDBRoot)' == ''">$(DevEnvDir)VC\Linux\bin\gdb\8.1\</GDBRoot>
    <GdbShellExecProgramPath Condition="'$(GdbShellExecProgramPath)' == ''">$(DevEnvDir)CommonExtensions\Microsoft\Linux\Linux</GdbShellExecProgramPath>
    <LinuxNatvisPath Condition="'$(LinuxNatvisPath)' == ''">$(DevEnvDir)CommonExtensions\Microsoft\Linux\Linux</LinuxNatvisPath>
  </PropertyGroup>

  <PropertyGroup>
    <GDBPath Condition="'$(GDBPath)' == '' AND '$(GDBRoot)' != ''">$(GDBRoot)$(PlatformTriplet)-gdb.exe</GDBPath>
    <GdbShellExecProgram Condition="'$(GdbShellExecProgram)' == '' AND '$(GdbShellExecProgramPath)' != ''">$(GdbShellExecProgramPath)\shellexec.exe</GdbShellExecProgram>
    <GdbShellExecProgramFlags Condition="'$(GdbShellExecProgramFlags)' == ''"></GdbShellExecProgramFlags>
    <LinuxNatvisFile Condition="'$(LinuxNatvisFile)' == '' AND '$(LinuxNatvisPath)' != ''">$(LinuxNatvisPath)\stl.natvis</LinuxNatvisFile>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Required for enabling Team Build projects -->
    <OutDirWasSpecified Condition=" '$(OutDir)'!='' AND '$(OutDirWasSpecified)'=='' ">true</OutDirWasSpecified>
    <OutDirWasSpecified Condition=" '$(OutDir)'=='' AND '$(OutDirWasSpecified)'=='' ">false</OutDirWasSpecified>

    <IntDir Condition="'$(IntDir)'=='' AND '$(IntermediateOutputPath)'!=''">$(IntermediateOutputPath)</IntDir>
    <IntDir Condition="'$(IntDir)'=='' AND '$(IntermediateOutputPath)'==''">$(ProjectDir)obj\$(Platform)\$(Configuration)\</IntDir>
    <OutDir Condition="'$(OutDir)'=='' AND '$(ProjectDir)' == ''">$(IntDir)</OutDir>
    <OutDir Condition="'$(OutDir)'=='' AND '$(ProjectDir)' != ''">$(ProjectDir)bin\$(Platform)\$(Configuration)\</OutDir>

    <LastRemoteTargetFile>$(IntDir)LastRemoteTarget.tlog</LastRemoteTargetFile>

    <!-- Disable Microsoft specific frameworks -->
    <UseOfMFC>false</UseOfMFC>
    <UseOfATL>false</UseOfATL>
    
    <!-- Unicode response files -->
    <CharacterSet>Unicode</CharacterSet>
		
   </PropertyGroup>

  <!-- Provide default values if necessary -->
  <PropertyGroup>
    <RemoteProjectDir Condition="'$(RemoteProjectDir)' == ''">$(RemoteRootDir)/$(ProjectName)</RemoteProjectDir>
    <RemoteOutDir Condition="'$(RemoteOutDir)' == ''">$(RemoteProjectDir)/bin/$(Platform)/$(Configuration)/</RemoteOutDir>

    <TargetRuntime>Native</TargetRuntime>
    <TargetExt />
    <ProjectName Condition="'$(ProjectName)' == ''">$(MSBuildProjectName)</ProjectName>

    <ExtensionsToDeleteOnClean Condition="'$(ExtensionsToDeleteOnClean)' == ''">*.d;*.tlog;$(ExtensionsToDeleteOnClean)</ExtensionsToDeleteOnClean>
    <PreBuildEventUseInBuild Condition="'$(PreBuildEventUseInBuild)' == ''">true</PreBuildEventUseInBuild>
    <PreLinkEventUseInBuild Condition="'$(PreLinkEventUseInBuild)' == ''">true</PreLinkEventUseInBuild>
    <PostBuildEventUseInBuild Condition="'$(PostBuildEventUseInBuild)' == ''">true</PostBuildEventUseInBuild>
    <RemotePreBuildEventUseInBuild Condition="'$(RemotePreBuildEventUseInBuild)' == ''">true</RemotePreBuildEventUseInBuild>
    <RemotePreLinkEventUseInBuild Condition="'$(RemotePreLinkEventUseInBuild)' == ''">true</RemotePreLinkEventUseInBuild>
    <RemotePostBuildEventUseInBuild Condition="'$(RemotePostBuildEventUseInBuild)' == ''">true</RemotePostBuildEventUseInBuild>

    <ConfigurationType Condition="'$(ConfigurationType)' == ''">Application</ConfigurationType>

    <RemoteExecuteTimeout Condition="'$(RemoteExecuteTimeout)' == ''">7200000</RemoteExecuteTimeout>
    <RemoteCompileCommandTimeout Condition="'$(RemoteCompileCommandTimeout)' == ''">3600000</RemoteCompileCommandTimeout>
    <RemoteLdCommmandTimeout Condition="'$(RemoteLdCommmandTimeout)' == ''">3600000</RemoteLdCommmandTimeout>
    <RemoteArCommmandTimeout Condition="'$(RemoteArCommmandTimeout)' == ''">3600000</RemoteArCommmandTimeout>

    <RemoteCompileLocalCopyObjectFiles>false</RemoteCompileLocalCopyObjectFiles>
    <RemoteLinkLocalCopyOutput>true</RemoteLinkLocalCopyOutput>

    <DebugChildProcesses Condition="'$(DebugChildProcesses)' == ''">false</DebugChildProcesses>

    <ValidateArchitecture Condition="'$(ValidateArchitecture)' == ''">True</ValidateArchitecture>
  </PropertyGroup>

  <ItemGroup>
    <SourcesToCopyRemotely Include="@(ClCompile);@(ClInclude);@(None);" />
    <DataFilesToCopyRemotely Include="@(Xsd);@(Resource);@(Object);@(Library);@(FxCompile);@(Image);@(Media);@(Xml);@(Text);@(Font)" />
  </ItemGroup>

  <PropertyGroup>
    <LocalRemoteCopySources Condition="'$(LocalRemoteCopySources)' == ''">true</LocalRemoteCopySources>
    <SourcesToCopyRemotelyOverride>@(SourcesToCopyRemotely);@(DataFilesToCopyRemotely)</SourcesToCopyRemotelyOverride>
    <AdditionalSourcesToCopyMapping Condition="'$(AdditionalSourcesToCopyMapping)' == ''"></AdditionalSourcesToCopyMapping>
  </PropertyGroup>

  <!-- ConfigurationType Specific values -->
  <PropertyGroup Condition="'$(ConfigurationType)' == 'Application'">
    <LinkCompiled>true</LinkCompiled>
    <TargetExt>.out</TargetExt>
    <OutputType>out</OutputType>
    <TargetName Condition="'$(TargetName)' == ''">$(ProjectName)</TargetName>
  </PropertyGroup>
	
  <!-- ConfigurationType Specific values -->
  <PropertyGroup Condition="'$(ConfigurationType)' == 'DynamicLibrary'">
    <!-- $(GenerateImportLib) should be set to true when you want to generate the import library as part of the BuildCompile pass rather than wait
         until the BuildLink pass for Linker to generate it. This allows circular dependencies between dlls to be satisfied when building using passes -->
    <ImpLibCompiled Condition="'$(GenerateImportLib)'=='true'">true</ImpLibCompiled>
    <LinkCompiled>true</LinkCompiled>
    <TargetExt>.so</TargetExt>
    <OutputType>library</OutputType>
  </PropertyGroup>

   <PropertyGroup Condition="'$(ConfigurationType)' == 'StaticLibrary'">
    <LibCompiled>true</LibCompiled>
    <TargetExt>.a</TargetExt>
    <TargetName Condition="'$(TargetName)' == ''">lib$(ProjectName)</TargetName>
    <OutputType>staticlibrary</OutputType>
  </PropertyGroup>

  <PropertyGroup>
    <RemoteDebuggingMode Condition="'$(RemoteDebuggingMode)' == ''">gdb</RemoteDebuggingMode>
    <RemoteDebuggerWorkingDirectory>$(RemoteOutDir)</RemoteDebuggerWorkingDirectory>
    <RemoteTargetPath Condition="'$(RemoteTargetPath)' == ''">$(RemoteOutDir)/$(TargetName)$(TargetExt)</RemoteTargetPath>
    <RemoteDebuggerCommand>$(RemoteTargetPath)</RemoteDebuggerCommand>
    <EnablePrettyPrinting Condition="'$(EnablePrettyPrinting)' == ''">true</EnablePrettyPrinting>
  </PropertyGroup>

  <PropertyGroup>
    <!-- VCToolsInstallDir and WindowsSdkDir are required to statisfy the missing directory detection. -->
    <VCToolsInstallDir Condition="'$(VCToolsInstallDir)' == ''">VCToolsInstallDir_is_not_defined</VCToolsInstallDir>
    <WindowsSdkDir Condition="'$(WindowsSdkDir)' == ''">WindowsSdkDir_is_not_defined</WindowsSdkDir>
    <_CheckDev11ToolsInstalled>false</_CheckDev11ToolsInstalled>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <CustomBuild>
      <Message                     Condition="'%(CustomBuild.Message)'                    == ''">Performing Custom Build Tools</Message>
      <LinkObjects                 Condition="'%(CustomBuild.LinkObjects)'                == ''">true</LinkObjects>
      <TreatOutputAsContent        Condition="'%(CustomBuild.TreatOutputAsContent)'       == ''">false</TreatOutputAsContent>
      <TrackerLogDirectory         Condition="'%(CustomBuild.TrackerLogDirectory)'        == ''">$(TLogLocation)</TrackerLogDirectory>
      <MinimalRebuildFromTracking  Condition="'%(CustomBuild.MinimalRebuildFromTracking)' == ''">true</MinimalRebuildFromTracking>
      <AcceptableNonZeroExitCodes  Condition="'%(CustomBuild.AcceptableNonZeroExitCodes)' == ''">$(AcceptableNonZeroExitCodes)</AcceptableNonZeroExitCodes>
    </CustomBuild>
    <CustomBuildStep>
      <Message                     Condition="'%(CustomBuildStep.Message)'==''" >Performing Custom Build Step</Message>
    </CustomBuildStep>
    <ProjectReference>
      <LinkLibraryDependencies      Condition="'%(ProjectReference.LinkLibraryDependencies)' == '' and '$(ConfigurationType)' == 'StaticLibrary'">false</LinkLibraryDependencies>
      <LinkLibraryDependencies      Condition="'%(ProjectReference.LinkLibraryDependencies)' == ''">true</LinkLibraryDependencies>
      <UseLibraryDependencyInputs   Condition="'%(ProjectReference.UseLibraryDependencyInputs)' == ''">false</UseLibraryDependencyInputs>
      <ReferenceOutputAssembly      Condition="'%(ProjectReference.ReferenceOutputAssembly)' == ''">false</ReferenceOutputAssembly>
      <Private                      Condition="'%(ProjectReference.Private)' == ''">true</Private>
    </ProjectReference>

  <!-- *******************************************************************************************
        Common Compile Options
       ******************************************************************************************* -->
    <ClCompile>
      <!--Debug mode-->
      <DebugInformation Condition="'$(UseDebugLibraries)' == 'true'">Full</DebugInformation>
      <Optimization Condition="'$(UseDebugLibraries)' == 'true'">Disabled</Optimization>
      <OmitFramePointers Condition="'$(UseDebugLibraries)' == 'true'">false</OmitFramePointers>
      <FunctionLevelLinking Condition="'$(UseDebugLibraries)' == 'true'">false</FunctionLevelLinking>
      <DataLevelLinking Condition="'$(UseDebugLibraries)' == 'true'">false</DataLevelLinking>
      <PreprocessorDefinitions Condition="'$(UseDebugLibraries)' != 'true'">%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <!--Release mode-->
      <DebugInformation Condition="'$(UseDebugLibraries)' != 'true'">Minimal</DebugInformation>
      <PreprocessorDefinitions Condition="'$(UseDebugLibraries)' != 'true'">_NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Optimization Condition="'$(UseDebugLibraries)' != 'true'">Full</Optimization>
      <OmitFramePointers Condition="'$(UseDebugLibraries)' != 'true'">true</OmitFramePointers>
      <FunctionLevelLinking Condition="'$(UseDebugLibraries)' != 'true'">true</FunctionLevelLinking>
      <DataLevelLinking Condition="'$(UseDebugLibraries)' != 'true'">true</DataLevelLinking>

      <!--General-->
			<Verbose>false</Verbose>
			<Pedantic>false</Pedantic>
			<WarningLevel>Default</WarningLevel>
			<DebugInformationFormat>GDB</DebugInformationFormat>
			
			<WarnReorder>Disable</WarnReorder>
			<WarnSwitch>Disable</WarnSwitch>
			<WarnSwitchDefault>Disable</WarnSwitchDefault>

			
      <ClangMode>true</ClangMode>
      <StrictAliasing>false</StrictAliasing>
      <ProgramDatabaseFileName>$(IntDir)</ProgramDatabaseFileName>
      <ExceptionHandling>Enabled</ExceptionHandling>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <PositionIndependentCode>true</PositionIndependentCode>
			
			<!--Language-->
      <UseShortEnums>false</UseShortEnums>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <CLanguageStandard>c11</CLanguageStandard>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
			
			
      <ObjectFileName>$(IntDir)%(filename).o</ObjectFileName>
      <CompileAs>Default</CompileAs>
      <TreatWarningAsError>false</TreatWarningAsError>
      
      <EnablePREfast Condition="'%(ClCompile.EnablePREfast)' == ''">false</EnablePREfast>
      <OmitFramePointers Condition="'%(ClCompile.OmitFramePointers)' == ''">false</OmitFramePointers>
      <MinimalRebuildFromTracking>true</MinimalRebuildFromTracking>
			
			<!--Precompiled Headers-->
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderOutputFileDirectory>$(IntDir)</PrecompiledHeaderOutputFileDirectory>
      <PrecompiledHeaderOutputFile></PrecompiledHeaderOutputFile>
      <PrecompiledHeaderCompileAs>CompileAsCpp</PrecompiledHeaderCompileAs>
    </ClCompile>
    
  <!-- *******************************************************************************************
        Common Linker Options
       ******************************************************************************************* -->
    <Link>
      <ShowProgress>false</ShowProgress>
      <Version>false</Version>
      <VerboseOutput>false</VerboseOutput>
      <IncrementalLink>false</IncrementalLink>
      <UnresolvedSymbolReferences>true</UnresolvedSymbolReferences>
      <OptimizeForMemory>false</OptimizeForMemory>
      <DebuggerSymbolInformation>true</DebuggerSymbolInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <MinimalRebuildFromTracking>true</MinimalRebuildFromTracking>
      <LibraryDependencies></LibraryDependencies>
      <PackageDebugSymbols Condition="'$(UseDebugLibraries)' == 'true'">true</PackageDebugSymbols>
      <PackageDebugSymbols Condition="'$(UseDebugLibraries)' != 'true'">false</PackageDebugSymbols>
	  <Subsystem Condition="'$(ConfigurationType)' == 'Application'">Application</Subsystem>
      <Subsystem Condition="'$(ConfigurationType)' == 'SharedLibrary'">SharedLibrary</Subsystem>
	  <ThreadSupport>true</ThreadSupport>
   </Link>

  <!-- *******************************************************************************************
        Common Library Options
       ******************************************************************************************* -->
    <Lib>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <Command>Replacement</Command>
      <CreateIndex>true</CreateIndex>
    </Lib>
  </ItemDefinitionGroup>

  <!-- *******************************************************************************************
        Common Strip Options
       ******************************************************************************************* -->
  <PropertyGroup>
    <StripOptions>--strip-unneeded $(StripOptions)</StripOptions>
    <PackageDebugSymbols>false</PackageDebugSymbols>
  </PropertyGroup>

  <!-- *******************************************************************************************
        Common Debugger Options
       ******************************************************************************************* -->
  <PropertyGroup>
    <!--  Initial Debugger page and debugger -->
    <DebuggerFlavor>LinuxDebugger</DebuggerFlavor>
    <DebuggerType>NativeOnly</DebuggerType>

    <!-- Disables the default tools as they are not relavent to Raspberry in the Property Pages -->
    <UseDefaultProjectTools>false</UseDefaultProjectTools>

    <!-- Hide default General Page to show our own -->
    <UseDefaultGeneralPropertyPageSchema>false</UseDefaultGeneralPropertyPageSchema>

    <!-- Guid used to define the group of items to show in the Add Item Dialog. -->
    <AddItemTemplateGuid Condition="'$(AddItemTemplateGuid)' == ''">{EB21DC10-A496-4D6C-B221-49E4C7F8FB0B}</AddItemTemplateGuid>

    <MultiProcNumber>1</MultiProcNumber>
  </PropertyGroup>

  <Import Project="$(LinuxCommonTargetsPath)\Linux.Common.props" />

  <Import Project="$(MSBuildThisFileDirectory)ImportAfter\*.props" Condition="Exists('$(MSBuildThisFileDirectory)ImportAfter')" />
</Project>
